name: Build UxPlay (Windows UCRT64)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up MSYS2 (UCRT64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            git
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-openssl
            mingw-w64-ucrt-x86_64-libplist
            mingw-w64-ucrt-x86_64-gstreamer
            mingw-w64-ucrt-x86_64-gst-plugins-base
            mingw-w64-ucrt-x86_64-gst-plugins-good
            mingw-w64-ucrt-x86_64-gst-plugins-bad
            man

      - name: Set BONJOUR_SDK_HOME
        run: echo "BONJOUR_SDK_HOME=C:/Program Files/Bonjour SDK" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Unzip Bonjour SDK
        run: |
          mkdir "$env:BONJOUR_SDK_HOME"
          tar -xf "Bonjour SDK.zip" -C "$env:BONJOUR_SDK_HOME" --strip-components=1
          dir "$env:BONJOUR_SDK_HOME"
        shell: pwsh

      - name: Configure build
        shell: msys2 {0}
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        shell: msys2 {0}
        run: |
          cd build
          ninja

      - name: Install (local to artifact dir)
        shell: msys2 {0}
        run: |
          cd build
          cmake --install . --prefix ./install

      - name: Copy required DLLs
        shell: pwsh
        run: |
          $dlls = @(
            "libglib-2.0-0.dll",
            "libintl-8.dll",
            "libiconv-2.dll",
            "libgobject-2.0-0.dll",
            "libgstreamer-1.0-0.dll",
            "libgstbase-1.0-0.dll",
            "libgstvideo-1.0-0.dll",
            "libgstaudio-1.0-0.dll",
            "libgstapp-1.0-0.dll"
          )
          foreach ($dll in $dlls) {
            $src = "C:/msys64/ucrt64/bin/$dll"
            $dst = "build/install/bin/$dll"
            if (Test-Path $src) {
              Copy-Item $src $dst -Force
              echo "Copied $dll"
            } else {
              echo "Warning: $dll not found in $src"
            }
          }

      - name: Upload uxplay.exe + DLLs
        uses: actions/upload-artifact@v4
        with:
          name: uxplay-windows
          path: build/install/bin/
